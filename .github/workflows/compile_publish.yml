name: Build

on:
  workflow_dispatch:
    inputs:
      pre_release:
        type: boolean
        description: Nightly Build
        required: false

jobs:
  create-release:
    name: "Preparations"
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      id: ${{ steps.release.outputs.id }}
      version: ${{ steps.version.outputs.sv-dlp_version }}

    steps:
    - name: Switch Branch
      uses: actions/checkout@v2
      with:
        ref: 'master'

    - name: Bump version
      id: version
      run: python dev_scripts/version_utils.py

    - name: Get Changelog
      run: sed '/## '${{ steps.version.outputs.sv-dlp_version }}'/d;/'---'/Q' CHANGELOG.md >> changelog_body

    - name: Create Release
      id: release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.sv-dlp_version }}
        release_name: ${{ steps.version.outputs.sv-dlp_version }}
        body_path: ./changelog_body
        draft: true
        prerelease: ${{ github.event.inputs.pre_release }}
          
    
    - name: Remove changelog_body
      run: rm changelog_body

    - name: Push Changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: '[${{ steps.version.outputs.sv-dlp_version }}] Bump Version & Changelog'

  publish-docs:
    name: Deploy Docs
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFIG_FILE: mkdocs.yml
          REQUIREMENTS: wiki_reqs.txt

  build-publish-pypi:
    name: "Build & Publish to PyPi"
    needs: create-release
    runs-on: ubuntu-latest

    steps:
    - name: Switch Branch
      uses: actions/checkout@v2
      with:
        ref: 'master'
        
    - name: Set up Python 3.10.5
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.5'
        architecture: 'x64'
        
    - name: Build Package
      run: |
        python -m pip install setuptools wheel
        python setup.py sdist bdist_wheel
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  compile-linux:
      name: "Compile Linux"
      runs-on: ubuntu-latest
      needs: create-release

      steps:
      - name: Switch Branch
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Set up Python 3.10.5
        uses: actions/setup-python@v2
        with:
            python-version: '3.10.5'
            architecture: 'x64'

      - name: Set up Python Virtual Environment
        run: python -m venv env || ./env/bin/activate

      - name: Install Required System Libraries
        run: sudo apt-get install libde265-0 liblzma5 libjpeg8 libjpeg9 libxau6 libnghttp2-14 libsqlite3-0 libtiff5 python3-libtiff libcurl4 python3-pycurl

      - name: Install Required Modules
        run: python -m pip install -r requirements.txt

      - name: Build - Linux x64 Binary
        run: python build_cli.py

      - name: Upload - Linux x64 Binary
        id: upload-linux_amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/sv-dlp
          asset_name: sv-dlp
          asset_content_type: application/tar+gzip
  compile-win_64:
      name: "Compile Windows x64"
      runs-on: windows-latest
      needs: create-release

      steps:
      - name: Switch Branch
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Set up Python 3.10.5
        uses: actions/setup-python@v2
        with:
            python-version: '3.10.5'
            architecture: 'x64'

      - name: Install UPX
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install upx

      - name: Set up Python Virtual Environment
        run: python -m venv env || ./env/Scripts/activate

      - name: Install Required Modules
        run: python -m pip install -r requirements.txt

      - name: Build - Windows x64 Binary
        run: python build_cli.py

      - name: Upload - Windows x64 Binary
        id: upload-win_amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/sv-dlp.exe
          asset_name: sv-dlp.exe
          asset_content_type: application/tar+gzip
  compile-darwin:
      name: "Compile macOS"
      runs-on: macos-latest
      needs: create-release

      steps:
      - name: Switch Branch
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Set up Python 3.10.5
        uses: actions/setup-python@v2
        with:
            python-version: '3.10.5'
            architecture: 'x64'

      - name: Set up Python Virtual Environment
        run: python -m venv env || ./env/bin/activate

      - name: Install Required Modules
        run: python -m pip install -r requirements.txt

      - name: Build - macOS Binary
        run: python build_cli.py

      - name: Upload - macOS Binary
        id: upload-darwin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/sv-dlp_macos
          asset_name: sv-dlp_macos
          asset_content_type: application/tar+gzip

  publish-release:
      name: "Publish Release"
      runs-on: ubuntu-latest
      needs: [create-release, compile-linux, compile-win_64, compile-darwin]
      steps:
      - name: Publish Release
        id: release
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ needs.create-release.outputs.id }}
          draft: false